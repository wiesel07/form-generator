/**
 * * Auto generated by Bossssoft Studio version 1.0 beta
 * Tue Sep 18 18:41:22 CST 2018
 */
//define(['引入外部js模块或控件'],function('引入外部js或控件的别名'){})
define(
		[ 
		  "app/widgets/window/app-dialog",
		  "app/app-pagebase",
		  "$!{main.xmlJsPath}/${main.classname}_util.js",
		  "resources/egov/js/common/utils/StatusUtils",
		  "resources/egov/js/asset/comment/assetcomment/assetcomment_add.js",
		   "resources/egov/js/common/utils/billUtils",
		  "app/widgets/button/app-menubutton"],
		function(Dialog,PageBase,$${main.capitalEntityName}Util,$status,$assetComment,$billUtils) {
		   var ${main.capitalEntityName}Dlg = PageBase.extend({
		             //类初始化
		            initialize : function() {
						${main.capitalEntityName}Dlg .superclass.initialize.call(this);
					},
				     ACTION: {
				            ADD: "ADD",
				            EDIT: "EDIT",
				            VIEW: "VIEW",
				            AUDIT: "AUDIT",
				            AUDIT_REJECT:"AUDIT_REJECT"
				     },
				    SELECT_DATA:[],
				
					BEFORE_DATA:null,
					 
					REFRESH_FLAG:false,// 用于判断关闭页面后是否要执行插传入的回调方法
					
					showPageCallBack:null, // 存储弹出窗口回调
					
					listeners:{
				         	//新增并保存
					  		${main.entityName}Page_saveaddBtn : {
								click : function() {
									 var self=${main.capitalEntityName}Dlg.getInstance();
									self.doSave({isSaveAdd:true})					
								}
							},
							${detail.entityName}Page_grid:{
								onEndEdit:function(rowData,newData,rowIndex){
									$A("#${detail.entityName}Page_grid").grid("acceptChanges");
								    $A("#${detail.entityName}Page_grid").grid("resetSummary");							
								}
							},
							
							 //选择明细
							${detail.entityName}Page_selectBtn: {
								click : function() {
									 var _self=${main.capitalEntityName}Dlg.getInstance();
									 _self.SELECT_DATA=[];
									 var $itemGrid = $A("#${detail.entityName}Page_grid");
								      $itemGrid.grid('endEdit');
								      var rows = $itemGrid.grid('getAllData');
								      var len = rows.length;
								      
								     $A.assetMsg.warn("选择明细等待完善！");
								    
						             var options = {
							         	url: "$!{main.controllerReqPath}/showCoProjectAdd.do?type=${main.businessType}",
						                dialogId: "coprojectDlg",
						                title: "选择工程项目",
						                wrapper: true,
						                hasheader: false,
						                reload: true,
						                closeCallback:function(){   
						                	
						            	}
						            };
									$.uiExtend({
									    type:'dialog',
									    contendId:'  ',
									    options:options
									});
									
//								var _self=${main.capitalEntityName}Dlg.getInstance();
//										$A("#${detail.entityName}Page_grid").grid('appendRow',{});
								}
							},
							
							   //删除项目计划明细
							${detail.entityName}Page_delBtn: {
								click : function() {
									 var _self=${main.capitalEntityName}Dlg.getInstance();
									 var rows = $("#${detail.entityName}Page_grid").grid("getSelections");
			            		     if (rows == null || rows.length <= 0) {
			                           $A.assetMsg.warn("请选择要删除的明细！");
			                           return;
			                        }
			            		     $.each(rows,function(i,row){
			            		    	 $A('#${detail.entityName}Page_grid').grid('deleteRow',row.__rowId);
			            		     });
									 
			            		 	$A("#${detail.entityName}Page_grid").grid("acceptChanges");
								    $A("#${detail.entityName}Page_grid").grid("resetSummary");							
								}
							}
					},
					
					 // 按钮事件定义
					  /**
				        * 打印
				        */
				       ${main.entityName}Page_btnPrint:function(){
				    	   console.log("in");
				       },
				       /**
				        * 流转状态
				        */
				       ${main.entityName}Page_btnFlow:function(){
				    	    var _self = ${main.capitalEntityName}Dlg.getInstance();
						    var ${main.entityName} =_self.BEFORE_DATA.${main.entityName};
							var billId = $A("#billId").textbox("getValue");
							var params = {"auditType":"${main.businessType}_AUDIT","businessId":billId,"data":${main.entityName}};
							$.flowSearch(params);
				       },
				       
				       
				       /**
				        * 流程帮助
				        */
						${main.entityName}Page_flowHelpbtn:function(){
							    $.flowHelp("${main.businessType}");
				       },
				       /**
				        * 暂存
				        */
				       ${main.entityName}Page_tempSaveBtn:function(){
				    		$A("#${main.entityName}Page_form").attr("validate", false);
				            ${main.capitalEntityName}Dlg.getInstance().doSave({
				                isTempSave: true
				             });
				       },
				       /**
				        * 提交
				        */
				       ${main.entityName}Page_saveAndCommitBtn:function(){
				    	   ${main.capitalEntityName}Dlg.getInstance().doSave({ isSaveCommit: true});    
				       },
				       
				       
				       /**
				        * 保存并提交按钮
				        */
						${main.entityName}Page_saveAndCommitBtn:function(){
				                ${main.capitalEntityName}Dlg.getInstance().doSave({
				                        isSaveCommit: true
				                 });    
						},
					     /**
					      * 审核按钮事件
					      */
				       ${main.entityName}Page_checkBtn:function () {
				   	       $A.assetMsg.confirm("确认审核吗？", {
								  ok:function(){
									   ${main.capitalEntityName}Dlg.getInstance().doAuditSave({
						            	     isCheckPass: true
						               });
								  }
							  });
				       },
				       /**
				        * 退回按钮事件 待办事项的时候调用
				        */
				       ${main.entityName}Page_backBtn:function (params) {
				           var backInfo=null;
					       	if("backRadom"==params){
					       		var backNodeInfo =$billUtils.getBackNodeInfo({'billId':$A("#billId").textbox('getValue')});
						        	$billUtils.showPage({'backNodeInfo':backNodeInfo},function(backInfo){
						        		${main.capitalEntityName}Dlg.getInstance().doAuditSave({
						              	     isBack: true,
						              	     taskId:backInfo.taskId,
						              	     userTaskName:backInfo.userTaskName
						                   });
						        	})
					       	}else{
					       		${main.capitalEntityName}Dlg.getInstance().doAuditSave({
					             	     isBack: true,
					             	     taskId:'BACK',
					             	     userTaskName:null
					                  });
					       	}
				       },
				       
				       /**
				        * 驳回按钮事件
				        */
				       ${main.entityName}Page_rejectBtn:function(){
				      
					       	$A.assetMsg.confirm("确认驳回该单据吗？", {
									  ok:function(){
										  ${main.capitalEntityName}Dlg.getInstance().doAuditSave({
							            	     isReject: true
							                 });
									  }
								  });
				       },
				       /**
				        * 意见按钮事件
				        */
				       ${main.entityName}Page_assetCommentBtn:function(){
				            var _self  = ${main.capitalEntityName}Dlg.getInstance();
				            var billId = _self.BEFORE_DATA.${main.entityName}.billId;
				            var curEditStatus = _self.BEFORE_DATA.curEditStatus;
				            var action= $assetComment.ACTION.VIEW;
				            if(_self.ACTION.AUDIT ==curEditStatus || _self.ACTION.REJECT_AUDIT == curEditStatus ){
				           	   action= $assetComment.ACTION.ADD;
				            }
					       	 $assetComment.showCommentPage({bizId:billId,action:action},function(content){
					       		 $("#auditOpin").textbox("setValue",content);
					       		 $("#auditOpin").textbox("setText",content);
					       	 })
				       },
					
		
					//保存数据cofig:{isSaveAdd:"保存并新增",isSaveClose:"保存关闭",isSaveView:"保存查看"}可自行扩展
					doSave:function(config,callback){
						
						   var _this = ${main.capitalEntityName}Dlg.getInstance();
						   var  action = _this.BEFORE_DATA.curEditStatus;
						   var url="";
						
						   if (config.isTempSave ){//暂存
				            	url="$!{main.controllerReqPath}/doTempSave.do?action=" + action;
				            }else if(config.isSaveCommit){
				            	url = "$!{main.controllerReqPath}/doSaveCommit.do?action=" + action;
				            }else{
				            	$A.assetMsg.warn("提交或暂存出错 ！");
				                return;
				            }
							
						    var $detailGrid = $A("#${detail.entityName}Page_grid");
				             // 保存前先保存网格数据
							if($detailGrid.grid('getCurrentEditRowIndex') != -1){
								$detailGrid.grid('endEdit',$detailGrid.grid('getCurrentEditRowIndex'))
							}
						   //期间值格式化 ,总金额赋值
						   var options={
									submitMode: 'all'
						   }
						   var formData = $A("#${main.entityName}Page_form").getSumbitData(options).data;
					       
						   var flag=  _this.checkRequireField(_this,formData);
						   if(!flag)return ;
						   var gridData = $A("#${detail.entityName}Page_grid").grid("getAllData")
						  
						   
						   $A.showWaitScreen();//显示等待画面
						   $app.ajax.ajaxCall({
				                url: url,
				                data: {
				                	'formData': JSON.stringify(formData),
				                	'gridData':JSON.stringify(gridData)
				                },
				                callback: function (result) {
				                   var _self=${main.capitalEntityName}Dlg.getInstance();
									$.closeDialog();
								    $A.assetMsg.success(result);
				                },
				                complete:function(){
				                	$A.hideWaitScreen();//隐藏等待画面	
				                }
				            });
					},
					
					checkRequireField:function(_this,formData){
						var flowTabs =_this.FlowTabs;
						if(!formData){
							    var tabIndex =flowTabs.getSelectIndex();
							    if(tabIndex!=0){
							    	var obj = $A("#${main.entityName}Page_form input") ;
						    		var len = obj.length;
						    		for(var i = 0;i<len;i++){
						    			var temp = obj[i].id;
						    			if(temp !=""){
						    		      var id = "#"+temp
						    			  var  flag =$("#${main.entityName}Page_form").find(id).valid();
						    		      if(flag ==0){
						    		    	var idName =  $("#${main.entityName}Page_form #label_"+$(obj[i]).prop('id')).text()
						    		    	idName = idName.substr(1,idName.length);
						    		        $A.assetMsg.warn(idName+"为必填项，请填写！");
						    		        flowTabs.switchContent(0); 
						    		        return false;
						    		      }
						    		   }
						    		}	
							    }
							    return false;
						   }
						return true;
					},
					
					  //保存审核相关数据cofig:{isCheckPass:"通过",isCheckBack:"退回",isCheckReject:"驳回","isCancleCheck":"取消审核"}
			        doAuditSave: function (config, callback) {
			            var url ,audtiComment;
			            
			            var taskId =  config.taskId ||'';
			            var auditOpin = $A("#auditOpin").textbox("getValue")||'';
			            if(auditOpin.trim()=='')auditOpin=null;
			            if (config.isCheckPass) {//审核
			                url = "$!{main.controllerReqPath}/doAudit.do";
			                audtiComment =auditOpin ||$billUtils.getAuditInfo("AGREE");
			            } else if (config.isReject) {//驳回
			                url = "$!{main.controllerReqPath}/doReject.do";
			                audtiComment =auditOpin || $billUtils.getAuditInfo("REJECT");
			            }else if(config.isBack){//退回
			            	url = "$!{main.controllerReqPath}/doBack.do";
			            	if(!(config.userTaskName)){
			            		config.userTaskName='';
			            	}
			            	audtiComment =auditOpin || $billUtils.getAuditInfo("BACK")+config.userTaskName;
			            }
			            
			        	
			            var billId = $A("#billId").textbox("getValue");
						$A.showWaitScreen();//显示等待画面
			            $app.ajax.ajaxCall({
			                url: url,
			                data: {
			                	billId:billId,
			                	auditComment:audtiComment,
			                    taskId:taskId 
			                },
			                callback: function (json) {
			                	 ${main.capitalEntityName}Dlg.getInstance().REFRESH_FLAG =true;
			                     $.closeDialog();
			                     $A.assetMsg.success(json);
			                },
			                complete:function(){
			                	$A.hideWaitScreen();//隐藏等待画面	
			                }
			            });
			        },
					
		
					formatDate:function (dateValue, dateFormat) {
					    if (dateFormat){
					        var year = dateValue.substring(0,4);
					        var month = dateValue.substring(5,7);
					        var day = dateValue.substring(8,11);
					        return dateFormat.replace('yyyy',year).replace('mm',month).replace('dd',day);
					    }
					    if(dateValue==null || dateValue==undefined || dateValue== "null"){
					        return "";
					    }
					   
					    if (dateValue.length == 7) {
					        return dateValue.substring(0,4)+dateValue.substring(5,7);
					    }
					    return dateValue;
					},
					
					formatNumber:function(val){
					   if(val==null || val ==''){
						   return 0;
					   }
					   return  parseFloat(val);
					},
      
       
				   //显示弹出窗口，action 窗口状态来源，ACTION:{ADD:"",EDIT:"",VIEW:""}//可自行扩展
				   showPage:function(data,callback){
						        this.showPageCallBack = callback || function () {};
						        var self = this;
									
							    var billId = data.billId || null;
					            var toDoStatus=data.toDoStatus;
					            var lifeState =data.lifeState || "0";
									 
								var url = "$!{main.controllerReqPath}/showEdit.do";//查看或者修改
								if(self.ACTION.ADD == toDoStatus){
									url = "$!{main.controllerReqPath}/showAdd.do";//新增
									var curDlg = $A.dialog.getCurrent();//銷毀之前頁面痕跡
									if(curDlg) curDlg.empty();
								}
								 
								$.uiExtend({
					                type: 'flow-page',
					                options: {
					                     title: '标题',  
					                     dialogId: "show${main.capitalEntityName}Dlg",
						                 title: "",
						                 wrapper: true,
						                 hasheader: false,
						                 reload: true,
										 hasFoot:true,footHeight:30,footInner:'<span></span>',//此三个参数设置tab界面是否具有底部，底部高度，底部承接内容的载体
									     beforeClose: null,//关闭当前对话窗口前所调用，关闭窗口前需有相应 弹窗设置可若条件不足可考虑在onpageLoad中通过获取当前对话窗口对象重置该方法
									     closeCallback:function(){ //关闭对话窗口后所调用回调函数
									    		if(callback) callback();
									    }
					                },
					                tabsOp: {
					                    type: 'flow-tabs',
					                    beforeClick: function () {//tab页点击前所对应事件  未使用过
					                    },
					                    afterClick: function () {//tab页点击后所对应事件  未使用过
					                    },
					                    data: {
					                        title: '',
					                        tabs: [
					                            {
					                                text: '表单',
					                                url:url,//页面url
					                                params: {//调用后台方法对应参数
					                                	 billId: billId,
					               		                 lifeState:lifeState,
					               		                 action: toDoStatus,
					           	                    },
										            buttonConfig:{//通过设置次参数可决定tab页面切换后按钮是否继续存在
										                //索引从1开始，1代表第二个tab，依次类推
										                showIndex:[1]
										            },
					                                onPageLoad: function (page,index,onPageArgs) {
			        
					                                     var flowTabs = page.FlowTabs;
					                                 	 var _self = ${main.capitalEntityName}Dlg.getInstance();
					                                     var curEditStatus = page.BEFORE_DATA.curEditStatus;
					                                     var hasReject = page.BEFORE_DATA.hasReject;//判断当前用户是否具有驳回权限
					                                    //设置按钮参数
					                                     var btnConfig =[ {text:'意见',method:'${main.entityName}Page_assetCommentBtn'},
			                                                 {text: '打印', method: '${main.entityName}Page_btnPrint'}, 
			                                            { text: '流转状态',method: '${main.entityName}Page_btnFlow' },
			                                            {text: '流程帮助',method: '${main.entityName}Page_flowHelpbtn'}];
					                                     
					                                     switch (curEditStatus) {
					 	             		 				case _self.ACTION.ADD :
					 	             		 				case _self.ACTION.EDIT:
					 	             		 				  btnConfig.splice(0,0, { text: '暂存', method: '${main.entityName}Page_tempSaveBtn'},
					                                                      {text: '提交',method: '${main.entityName}Page_saveAndCommitBtn'});
					 	             		 					flowTabs.addButtons(btnConfig,index);//初始化界面按钮
					 	             		 					break;
					 	             		 				case _self.ACTION.AUDIT :
					 	             		 					 btnConfig.splice(0,0, { text: '审核', method: '${main.entityName}Page_checkBtn'},
					 	             		 							//{ text: '退回', method: '${main.entityName}Page_backBtn'}
					 	             		 					        { text: '退回', method: 'backBtn',
							             		 						       menus:[{text: '退回上一步',  method: '${main.entityName}Page_backBtn',params:'back' },
							             		 						         {text:"自定义退回",method:"${main.entityName}Page_backBtn",params:'backRadom'}]
					             		 							     }
					                                               );
					 	             		 					flowTabs.addButtons(btnConfig,index);
					 	             		 					break;
					 	             		 				case _self.ACTION.AUDIT_REJECT :
					 	             		 					if("1"==hasReject){
					 	             		 					    btnConfig.splice(0,0,{text: '驳回',method: '${main.entityName}Page_rejectBtn' });
					 	             		 						flowTabs.addButtons(btnConfig,index);
					 	             		 						return;
					 	             		 					}
					 	             		 					flowTabs.addButtons(btnConfig,index);
					 	             		 					break;
					 	             		 				case _self.ACTION.VIEW:
					 	             		 					flowTabs.addButtons(btnConfig,index);
					 	             		 					break;
					 	             		 				default :
					 	             		 					$A.assetMsg.warn("当前编辑状态错误！");
					 	             		 					break;
					 	             		 		    };
					                                }
					                                	
					                            }
					                            
//					                             {
//					                                        text: '上传附件',
//					                                        url:'$!{main.controllerReqPath}/showAttach.do',//页面url
//					                                        hide:false,
//					                                        params: {
//					                                        	   
//					                    	                }
//					                              }
					                        ]
					                    }
					                },
					                complete: function () {
					            
					                }
					            });
						},
					
						//设置附件
						setAttach:function(status){
							 
							        if($A("#assetcodebtreturn_attach").length==0)return;
							 		var _self = ${main.capitalEntityName}Dlg.getInstance();
								    var billId = _self.BEFORE_DATA.${main.entityName}.billId;//获取当前表单ID
								    
								    var grade =1;//获取当前附件权限等级
									var bizTypeName ='${main.comments}';
									var bizType = '${main.businessType}';								
									var itemType="-";

									$("#${main.classname}_attach").createNewAttach({
										grade: grade,
										groupId : billId,
										bizTypeName : bizTypeName,
										bizType : bizType,
										itemType : itemType,
										status:status,
										expand:true,//panel生成后true 展开 false收起
										attachId:'${main.classname}_attach'
									});
						},
						
						
						 // 数据刷新
				        refreshData: function () {
				            var _self = ${main.capitalEntityName}Dlg.getInstance();
			
				            var $grid = $A("#${detail.entityName}Page_grid").data('grid');
				            var curEditStatus = _self.BEFORE_DATA.curEditStatus;

			            	 $grid.load("$!{main.controllerReqPath}/query${detail.capitalEntityName}Page.do");

				        },
			
						beforeFormInit:function(page,curEditStatus){
				        	 
				        	 var _self = ${main.capitalEntityName}Dlg.getInstance();
				        	 var $input=[];
				        	 if(_self.ACTION.ADD==curEditStatus|| _self.ACTION.EDIT==curEditStatus){
				        		 $input =  page.find('#${main.entityName}Page #billCode');
				        		 $${main.capitalEntityName}Util.setFormFieldStyle($input);
				        	 }
				   
				        	 if(_self.ACTION.VIEW ==curEditStatus ||_self.ACTION.AUDIT== curEditStatus||_self.ACTION.AUDIT_REJECT==curEditStatus){
				        		 var $input = $("#${main.entityName}Page .editor input") ;
				        		 $${main.capitalEntityName}Util.setFormFieldStyle($input);
				        	 }
				       },
			
				      //设置表单底部信息项
					   beforeFootInfoInit:function(data){
							
					    	var ${main.entityName} =data.${main.entityName};
					    	var bizStatus = ${main.entityName}.bizStatus;
					    	
					    	var auditDate= ${main.entityName}.auditDate;
					    	if(auditDate!=null || auditDate!='' ||auditDate!=undefined){
					    		auditDate =auditDate.substr(0,4)+"-"+auditDate.substr(4,2)+"-"+auditDate.substr(6,2);
					    	}
					    	
					    	var createdate=${main.entityName}.createdate;
					    	if(createdate!=null || createdate!='' ||createdate!=undefined){
					    		createdate =createdate.substr(0,4)+"-"+createdate.substr(4,2)+"-"+createdate.substr(6,2);
					    	}
					    	$${main.capitalEntityName}Util.setBillFootInfo({
								curBillStatus:data.curBillStatus,//单据信息展现状态
								bizStatusName:$status.formatterBizStatus(bizStatus),//当前业务状态名称
								orgName:${main.entityName}.orgName,//单位名称
								createDate:createdate,//创建日期
								curMaker:data.curMaker,//创建人
								nextStep :${main.entityName}.nextStep,//下一环节名称
								confirmDate:auditDate,//确定日期，终审时候才有用
								curEditStatus:data.curEditStatus//当前编辑状态 目前新增时有用
							});
					    },
		    
		    
					//页面加载前初始化
				    beforePageInit:function(page,data){   
		
				    	 $A("#${main.entityName}Page .form #${main.entityName}Page_form").css({"margin-top":"15px"});  // 去除表单组间的margin
				    	 
				    	 var _self = ${main.capitalEntityName}Dlg.getInstance();
					     _self.BEFORE_DATA =data;
					     
					     var curEditStatus = data.curEditStatus;
					   
					     _self.beforeFootInfoInit(data);//设置单据底部信息
					     _self.beforeFormInit(page,curEditStatus);//初始化表单编辑与否情况
					     
					 	var title = $${main.capitalEntityName}Util.getPageTitle(curEditStatus);
		
						$("#showAssetcobankbalanceDlg > div.dialog-content > div > div.page-head > div.title").append('<span>'+title+'</span>')
					 
					 
			         },
	         
		    
			
					//页面加载后初始化
					initPage:function(){
						var _self = ${main.capitalEntityName}Dlg.getInstance();
						// 初始化
						_self.SELECT_DATA=[];
						
						var curEditStatus = _self.BEFORE_DATA.curEditStatus;//获取当前编辑状态
					
						var billId = _self.BEFORE_DATA.${main.entityName}.billId;
						var $grid = $("#${detail.entityName}Page_grid").data('grid');
					    $grid.setFixedParameter({billId:billId});//设置固定查询参数
						_self.refreshData();//刷新下方网格数据
						
						
						if(curEditStatus==_self.ACTION.ADD){//新增的时候打印按钮移除
							
						    //_self.switchTipsByUseMode(useMode);//显示网格编辑提示信息
					        $A("button[_method='${main.entityName}Page_btnPrint']").remove();
						}
						if(curEditStatus==_self.ACTION.EDIT){//编辑的时候按钮变化
							//self.switchTipsByUseMode(useMode);//显示网格编辑提示信息
						}
						if(curEditStatus==_self.ACTION.VIEW || curEditStatus==_self.ACTION.AUDIT ||curEditStatus==_self.ACTION.AUDIT_REJECT){//新增的时候打印按钮移除
							
							$grid.disableEdit();//设置网格不可编辑
							$grid.hideColumn('_checkbox');
							$A("#${main.entityName}AddPage_panel_center div.grid-header-toolbar").remove();//移除选择资产和批量删除按钮 
						}
					},		
					//控件属性重置
					initUIExtConfig : function() {
						
							//格式 #控件id#:function(控件属性集类){ config.setAttr("控件属性名","属性值"),// 网格，下拉网格，特殊设置config.getColumn("网列id").setAttr("列属性名","列属性值")config.getButton("网格内包含的按钮id").setAttr("handler","点击事件")  }
					this.uiExtConfig = {
					${detail.entityName} : function(gridConfig) {
						//增行
						gridConfig.getButton("gridBtnAdd").setAttr("handler",function(){
							$A("#${detail.entityName}").grid('appendRow');
						});
						//删行
						gridConfig.getButton("gridBtnDel").setAttr("handler",function(rowData, rowIndex){
							$A("#${detail.entityName}").grid('deleteRow',rowIndex);
						});
					}

			};

		  }

		});
		   //创建窗体类单例
			 ${main.capitalEntityName}Dlg.getInstance=function(){
		     if (!this.instance){
		    	 this.instance =new ${main.capitalEntityName}Dlg();
		     }
		     return this.instance;
		 }
		
		 return  ${main.capitalEntityName}Dlg.getInstance();
	   })